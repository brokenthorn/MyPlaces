// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyPlaces.Data.EfCore;

namespace MyPlaces.Data.EfCore.Migrations
{
    [DbContext(typeof(MyPlacesDbContext))]
    partial class MyPlacesDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MyPlaces.Data.Entities.City", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Latitude")
                        .HasPrecision(16, 14)
                        .HasColumnType("decimal(16,14)");

                    b.Property<decimal>("Longitude")
                        .HasPrecision(16, 13)
                        .HasColumnType("decimal(16,13)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("MyPlaces.Data.Entities.GMPlace", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Latitude")
                        .HasPrecision(16, 14)
                        .HasColumnType("decimal(16,14)");

                    b.Property<decimal>("Longitude")
                        .HasPrecision(16, 13)
                        .HasColumnType("decimal(16,13)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("GMPlaces");
                });

            modelBuilder.Entity("MyPlaces.Data.Entities.GMPlace", b =>
                {
                    b.HasOne("MyPlaces.Data.Entities.City", "City")
                        .WithMany("GMPlaces")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("MyPlaces.Data.Entities.City", b =>
                {
                    b.Navigation("GMPlaces");
                });
#pragma warning restore 612, 618
        }
    }
}
